# This file is the entry point to configure your own services.
# Files in the packages/ subdirectory configure your dependencies.

# Put parameters here that don't need to change on each machine where the app is deployed
# https://symfony.com/doc/current/best_practices.html#use-parameters-for-application-configuration
parameters:
    domain: "%env(DOMAIN)%"

services:
    # default configuration for services in *this* file
    _defaults:
        autowire: true # Automatically injects dependencies in your services.
        autoconfigure: true # Automatically registers your services as commands, event subscribers, etc.

    # makes classes in src/ available to be used as services
    # this creates a service per class whose id is the fully-qualified class name
    App\:
        resource: "../src/"

    # Subdomain service with domain parameter
    App\Service\SubdomainService:
        arguments:
            $domain: "%domain%"

    # PDO Session Handler
    Symfony\Component\HttpFoundation\Session\Storage\Handler\PdoSessionHandler:
        arguments:
            - "%env(DATABASE_URL)%"

    # Monolog: Custom Twig email handler
    App\Service\Logging\TwigEmailHandler:
        arguments:
            $fromEmail: "%env(MAILER_FROM_EMAIL)%"
            $toEmail: "%env(MAILER_ADMIN_EMAIL)%"
            $subject: "[Tarmac] Critical Error Alert"
            $level: 500 # Critical level
        tags:
            - { name: "monolog.handler", handler: "twig_email" }

    # Monolog: Custom formatter for error emails (fallback)
    App\Service\Logging\ErrorEmailFormatter:
        tags: ["monolog.formatter"]

    # Monolog: User information processor
    App\Service\Logging\UserLogProcessor:
        tags:
            - { name: "monolog.processor" }

    # Monolog: Web request processor
    monolog.processor.web:
        class: Monolog\Processor\WebProcessor
        tags:
            - { name: "monolog.processor" }

    # add more service definitions when explicit configuration is needed
    # please note that last definitions always *replace* previous ones
